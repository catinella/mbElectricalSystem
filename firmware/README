#-----------------------------------------------------------------------------------------------------------------------------------
     __  __       _             _     _ _          _____ _           _        _           _   ____            _                 
    |  \/  | ___ | |_ ___  _ __| |__ (_) | _____  | ____| | ___  ___| |_ _ __(_) ___ __ _| | / ___| _   _ ___| |_ ___ _ __ ___  
    | |\/| |/ _ \| __/ _ \| '__| '_ \| | |/ / _ \ |  _| | |/ _ \/ __| __| '__| |/ __/ _` | | \___ \| | | / __| __/ _ \ '_ ` _ \ 
    | |  | | (_) | || (_) | |  | |_) | |   <  __/ | |___| |  __/ (__| |_| |  | | (_| (_| | |  ___) | |_| \__ \ ||  __/ | | | | |
    |_|  |_|\___/ \__\___/|_|  |_.__/|_|_|\_\___| |_____|_|\___|\___|\__|_|  |_|\___\__,_|_| |____/ \__, |___/\__\___|_| |_| |_|
                                                                                                    |___/                       
#-----------------------------------------------------------------------------------------------------------------------------------
0. Files
	debugTools.h            Useful tools for code debug activities
	firmware.c              Firmware main file (main())
	firmware0-test.c        Very basic test, it requires just a multimeter
	firmware1-test.c        It makes a LED to flash
	firmware2-test.c        It prints "hello-world" on your serial console
	firmware3-test.c        It prints the analog input (A1-A4) value
	firmware4-test.c        It tests the MCP23008 chip
	[Makefile]              Rules to build the firmware
	[Makefile.conf]         Makefile configuration file
	Makefile.MSWin          Makefile for ATMEL-studio ver 6 on MS-Windows
	Makefile.POSIX          Makefile for generic POSIX systems
	Makefile-xc8            Makefile dor XC8 compiler. It has been self-generated by PLabX software
	mbesMock.h              Header file to mock all external function (just for unit test)
	mbesPinsMap.h           It is the map to associate ATmega16 pins to the firmware input symbols
	mbesSelector.{c|h}      Library to manage the input selectors (switches, buttons...)
	mbesSerialConsole.{c|h} Library to manage the RS232 UART communiucations
	mbesUtilities.{c|h}     Library for low level functions
	mbesADCengine.{c|h}     Analog input operations management
	mbesI2C.c.{c|h}         I2C operations
	tests                   Folder for unit-tests

1. Description:
	This folder contains all needed files to build the project firmware

	Configuration
	=============
	In order to build the firmware correctly, you need to create a symbolic link to the Makefile you want to use. If you are using
	Windows, change the name of the target file to the conventional "Makefile" one. After this task you have to create the
	Makefile.conf file with the following definitions:
		AVR-GCC_HOME = <path>   # The AVR-GCC toolchain folder
		BUILD4MPLABX = {0|1}    # If it is set then the produced files will be stored in the MPLabX standard folders


	Firmware building:
	==================
		For production firmware
			make all
			make install # For USB ASP

		For testing firmware
			make FIRMWARE=firmware<n>-test
			make install FIRMWARE=firmware<n>-test # For USB ASP


	Checking for fuses status:
	==========================
	In order to avoid ghost problems, it is highly recommended to check the fuses status. You can get their value using the
	following command: make fuses-read

	                +----------+---------+--------+-------+--------+---------+---------+----------+
	Bit number:     |     7    |    6    |   5    |   4   |   3    |    2    |    1    |    0     |
	                +----------+---------+--------+-------+--------+---------+---------+----------+
	High fuse bits: |   OCDEN  | JTAGEN  | SPIEN  | CKOPT | EESAVE | BOOTSZ1 | BOOTSZ0 | BOOTTRST | 
	                +----------+---------+--------+-------+--------+---------+---------+----------+
	Low fuse bits:  | BODLEVEL |  BODEN  |  SUT1  | SUT0  | CKSEL3 |  CKSEL2 | CKSEL1  |  CKSEL0  |
	                +----------+---------+--------+-------+--------+---------+---------+----------+
	
	OCDEN (On-Chip Debugging Enable)
		The on-chip debugging is used to run the program step-by-step on hardware to study the internal signal which provides
		the information about state of the processor. This bit is used to enable/disable the on-chip debugging.
		If this bit is programmed (0), then the on-chip debugging is enabled.

	JTAGEN (JTAG Enable)
		There is an in-built JTAG unit in ATmega16, which is pre-activated in virgin microcontroller. To disable the JTAG,
		JTAGEN bit should be unprogrammed (1)

	SPIEN (SPI Serial Programming Enable)
		If this bit is programmed (0), the SPI serial programming of the controller is enabled, else you cannot upload firmware
		using SPI
	
	CKOPT (Clock Option)
		This bit is combined with CKSEL [3:1] bits to select operating frequency and its mode

	EESAVE (EEPROM Save)
		This bit is used to preserve the EEPROM content during chip erase. If the fuse is programmed (0), the EEPROM preserves
		its content else it is not preserved duringchip erase.
	
	BOOTSZ [1:0] (Boot Size)
		The default value of these bits is ‘00’ which sets the boot size to 1024 words. This size is allocated from flash memory.
		Bootloader always resides at the bottom of flash.

	BOOTRST [BootLoader Reset]
		BootLoader is a small program which is written on a specific area of the flash memory. This program executes at the boot
		time of the controller. If BOOTRST bit is programmed (0), the device will jump on first address bootloader block.

	BODLEVEL (Brown-Out Detection Level)
		This fuse bit is used to set trigger level for BOD unit. The trigger voltage is set as 2.7 volts, if the BODLEVEL bit is
		unprogrammed (1). If this fuse bit is programmed (0), the trigger level is set to 4.0 volts.

	SUT [1:0] (Start Up Time)
		This bit is used to set start up time of ATmega16. The combination of SUT [1:0] and CKSEL0 bits are used to select the
		start-up time of controller.

	CKSEL[3:0] (Clock Selection)
		These bits allow you to select the oscillator frequency

	Default values:
		HI: 1 0 0 1 1 0 0 1  dec=153 hex=99
		LO: 1 1 1 0 0 0 0 1  dec=225 hex=e1
