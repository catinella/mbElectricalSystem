#-----------------------------------------------------------------------------------------------------------------------------------
     __  __       _             _     _ _          _____ _           _        _           _   ____            _                 
    |  \/  | ___ | |_ ___  _ __| |__ (_) | _____  | ____| | ___  ___| |_ _ __(_) ___ __ _| | / ___| _   _ ___| |_ ___ _ __ ___  
    | |\/| |/ _ \| __/ _ \| '__| '_ \| | |/ / _ \ |  _| | |/ _ \/ __| __| '__| |/ __/ _` | | \___ \| | | / __| __/ _ \ '_ ` _ \ 
    | |  | | (_) | || (_) | |  | |_) | |   <  __/ | |___| |  __/ (__| |_| |  | | (_| (_| | |  ___) | |_| \__ \ ||  __/ | | | | |
    |_|  |_|\___/ \__\___/|_|  |_.__/|_|_|\_\___| |_____|_|\___|\___|\__|_|  |_|\___\__,_|_| |____/ \__, |___/\__\___|_| |_| |_|
                                                                                                    |___/                       
#-----------------------------------------------------------------------------------------------------------------------------------
0. Files
	debugTools.h           Useful tools for code debug activities
	firmware.c             Firmware main file (main())
	firmware-test.c        This firmware is an "hello-world" just for test
	[Makefile]             Rules to build the firmware
	[Makefile.conf]        Makefile configuration file
	Makefile.MSWin         Makefile for ATMEL-studio ver 6 on MS-Windows
	Makefile.POSIX         Makefile for generic POSIX systems
	Makefile-xc8           Makefile dor XC8 compiler. It has been self-generated by PLabX software
	mbesMock.h             Header file to mock all external function (just for unit test)
	mbesPinsMap.h          It is the map to associate ATmega16 pins to the firmware input symbols
	mbesSelector.c         Library to manage the input selectors (switches, buttons...)
	mbesSelector.h         Header file
	mbesSerialConsole.c    Library to manage the RS232 UART communiucations
	mbesSerialConsole.h    Header file
	mbesUtilities.c        Library for low level functions
	mbesUtilities.h        Header file
	tests

1. Description:
	This folder contains all needed files to build the project firmware

	Configuration
	=============
	In order to build the firmware correctly, you need to create a symbolic link to the Makefile you want to use. If you are using
	Windows, change the name of the target file to the conventional "Makefile" one. After this task you have to create the
	Makefile.conf file with the following definitions:
		AVR-GCC_HOME = <path>   # The AVR-GCC toolchain folder
		BUILD4MPLABX = {0|1}    # If it is set then the produced files will be stored in the MPLabX standard folders


